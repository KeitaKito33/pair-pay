{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Keita\\\\Documents\\\\Programming\\\\pair-pay\\\\frontend\\\\src\\\\PaymentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentForm() {\n  _s();\n  // 入力フォームの状態を管理するためのstate\n  const [userId, setUserId] = useState('user-001'); // 初期値をダミーデータに設定\n  const [amount, setAmount] = useState('');\n  const [startMonth, setStartMonth] = useState(''); // \"2025-09\" のような形式で入力\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // フォームのデフォルトの送信動作を防ぐ\n\n    // 送信するデータを作成\n    const requestData = {\n      amount: Number(amount),\n      // 数値型に変換\n      startMonth: startMonth\n    };\n    try {\n      // バックエンドのAPIを呼び出す\n      const response = await axios.post(`http://localhost:8080/api/users/${userId}/monthly-payments`, requestData);\n\n      // 成功した場合\n      if (response.status === 201) {\n        alert('支払情報の追加に成功しました！');\n        // 成功したらフォームをクリアする\n        setAmount('');\n        setStartMonth('');\n      }\n    } catch (error) {\n      // エラーが発生した場合\n      console.error('エラーが発生しました:', error);\n      alert('エラーが発生しました。詳細はコンソールを確認してください。');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u6708\\u6B21\\u652F\\u6255\\u60C5\\u5831 \\u8FFD\\u52A0\\u30D5\\u30A9\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u30E6\\u30FC\\u30B6\\u30FCID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u652F\\u6255\\u91D1\\u984D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u9069\\u7528\\u958B\\u59CB\\u6708 (YYYY-MM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u4F8B: 2025-09\",\n          value: startMonth,\n          onChange: e => setStartMonth(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u8FFD\\u52A0\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentForm, \"wgnYVHqCPpk6uGIU+LL+KaLNWuI=\");\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PaymentForm","_s","userId","setUserId","amount","setAmount","startMonth","setStartMonth","handleSubmit","event","preventDefault","requestData","Number","response","post","status","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Keita/Documents/Programming/pair-pay/frontend/src/PaymentForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction PaymentForm() {\r\n  // 入力フォームの状態を管理するためのstate\r\n  const [userId, setUserId] = useState('user-001'); // 初期値をダミーデータに設定\r\n  const [amount, setAmount] = useState('');\r\n  const [startMonth, setStartMonth] = useState(''); // \"2025-09\" のような形式で入力\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // フォームのデフォルトの送信動作を防ぐ\r\n\r\n    // 送信するデータを作成\r\n    const requestData = {\r\n      amount: Number(amount), // 数値型に変換\r\n      startMonth: startMonth,\r\n    };\r\n\r\n    try {\r\n      // バックエンドのAPIを呼び出す\r\n      const response = await axios.post(\r\n        `http://localhost:8080/api/users/${userId}/monthly-payments`,\r\n        requestData\r\n      );\r\n\r\n      // 成功した場合\r\n      if (response.status === 201) {\r\n        alert('支払情報の追加に成功しました！');\r\n        // 成功したらフォームをクリアする\r\n        setAmount('');\r\n        setStartMonth('');\r\n      }\r\n    } catch (error) {\r\n      // エラーが発生した場合\r\n      console.error('エラーが発生しました:', error);\r\n      alert('エラーが発生しました。詳細はコンソールを確認してください。');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>月次支払情報 追加フォーム</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>ユーザーID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userId}\r\n            onChange={(e) => setUserId(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>支払金額:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>適用開始月 (YYYY-MM):</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"例: 2025-09\"\r\n            value={startMonth}\r\n            onChange={(e) => setStartMonth(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">追加する</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}